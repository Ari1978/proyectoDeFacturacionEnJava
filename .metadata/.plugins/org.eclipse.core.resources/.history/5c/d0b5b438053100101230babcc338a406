
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.Data;
import lombok.ToString;

@Entity
@Table(name = "Categoria")
@Data
@ToString(exclude = "practicas") // Evitar la recursión infinita
@Schema(description = "Modelo de la Categoria")
public class Categoria {

    @Schema(description = "ID de la categoria", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Schema(description = "Nombre de la categoria", requiredMode = Schema.RequiredMode.REQUIRED, example = "Estudios por imagenes")
    @Column(name = "Nombre", nullable = false, unique = true)
    private String nombre;

    // Solo mantener una relación OneToMany
    @OneToMany(mappedBy = "categoria", fetch = FetchType.EAGER)
    @JsonIgnore
    private List<Practica> practicas = new ArrayList<>();

    public Categoria(String nombre) {
        this.nombre = nombre;
    }
}
